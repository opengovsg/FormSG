name: Deploy to AWS Elastic Beanstalk
on:
  push:
    branches:
      - release
      - staging
      - staging-alt
      - uat

jobs:
  set_environment:
    outputs:
      current_env: ${{ steps.set-environment.outputs.current_env }}
    runs-on: ubuntu-latest
    steps:
      - id: set-environment
        run: echo "::set-output name=current_env::${{github.ref_name}}"

  build_application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - name: build script
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
        run: |
          npm ci
          set -e
          npm_config_mode=yes npx lockfile-lint --type npm --path package.json --validate-https --allowed-hosts npm
          npm run lint-ci
          npm run build

  deploy_application:
    needs: [build_application, set_environment]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.set_environment.outputs.current_env }}
    env:
      IMAGE_TAG: github-actions-${{ github.sha }}-${{ github.github_run_id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get App Version
        id: get-version
        run: |
          versionValue=$(cat package.json | jq '.version')
          appVersion="${versionValue%\"}"
          appVersion="${appVersion#\"}"

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REPOSITORY:$IMAGE_TAG
          sed -i -e "s/@TAG/$IMAGE_TAG/g" Dockerrun.aws.json 
          zip -r "$IMAGE_TAG.zip" .ebextensions Dockerrun.aws.json

      - name: Deploy to Elastic Beanstalk
        env:
          APP_VERSION: v${{ steps.get-version.outputs.app-version }}
          BUCKET_NAME: ${{ secrets.STAGING_BUCKET_NAME }}
          APP_NAME: ${{ secrets.STAGING_APP_NAME }}
          ENV: ${{ secrets.STAGING_DEPLOY_ENV }}
        run: |
          aws elasticbeanstalk create-application-version --application-name $APP_NAME \
          --version-label $APP_VERSION \
          --source-bundle S3Bucket=$BUCKET_NAME,S3Key=$IMAGE_TAG.zip \
          --description "${{ github.event.head_commit.message }}"

          aws elasticbeanstalk update-environment --application-name $APP_NAME \
            --environment-name $ENV \
            --version-label $APP_VERSION
