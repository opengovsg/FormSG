name: CI

on:
  push:
  pull_request:
    types: [opened, reopened]

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - __tests__/**
              - shared/**
              - frontend/**
            backend:
              - __tests__/**
              - shared/**
              - src/**
              - package.json
              - package-lock.json
            

  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci

  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p build-output/
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      # Load cached node_modules
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm run build
        env:
          NODE_OPTIONS: '--max-old-space-size=2048 --openssl-legacy-provider'
      - name: Upload build files
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build-output
          path: |
            package*.json
            dist/

  frontend_test:
    needs: [changes, install]
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      # Load cached node_modules
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm run test:frontend

  frontend_lint:
    needs: [changes, install]
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      # Load cached node_modules
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm run lint:frontend

  backend_test:
    needs: [changes, install, build]
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        if: always()
        with:
          name: build-output
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      # Load cached node_modules
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci --prefix serverless/virus-scanner
      - run: npm run test:backend
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  backend_lint:
    needs: [changes, install]
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      # Load cached node_modules
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      - run: npm run lint-ci
      - run: npm_config_mode=yes npx lockfile-lint --type npm --path package.json --validate-https --allowed-hosts npm
