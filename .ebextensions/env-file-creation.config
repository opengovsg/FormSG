# Creates an .env file from AWS SSM Parameter Store

commands:
  01-create-env:
    command: "/tmp/create-env.sh"

files:
  "/tmp/create-env.sh":
      mode: "000755"
      content : |
        #!/bin/bash
        # Reach into the undocumented container config
        AWS_REGION='`{"Ref": "AWS::Region"}`'
        ENV_TYPE=$(/opt/elasticbeanstalk/bin/get-config environment -k SSM_PREFIX)
        ENV_SITE_NAME=$(/opt/elasticbeanstalk/bin/get-config environment -k SSM_ENV_SITE_NAME)
        TARGET_DIR=/etc/formsg

        echo "Checking if ${TARGET_DIR} exists..."
        if [ ! -d ${TARGET_DIR} ]; then
            echo "Creating directory ${TARGET_DIR} ..."
            mkdir -p ${TARGET_DIR}
            if [ $? -ne 0 ]; then
                echo 'ERROR: Directory creation failed!'
                exit 1
            fi
        else
            echo "Directory ${TARGET_DIR} already exists!"
        fi

        echo "Setting ENV_SITE_NAME config for payment credentials..."
        if [ -z "${ENV_SITE_NAME}" ]; then
            echo "setting ENV_SITE_NAME as ENV_TYPE (${ENV_TYPE})"
            ENV_SITE_NAME=${ENV_TYPE}
        else
          echo "ENV_SITE_NAME already set as ${ENV_SITE_NAME} using SSM_ENV_SITE_NAME"
        fi

        echo "Creating config for ${ENV_SITE_NAME} in ${AWS_REGION}"
        aws ssm get-parameter --name "${ENV_TYPE}-general" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' > $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-captcha" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-ga" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-intranet" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-sentry" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-sms" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-ndi" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-sgid" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-verified-fields" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_TYPE}-webhook-verified-content" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env
        aws ssm get-parameter --name "${ENV_SITE_NAME}-payment" --with-decryption --region $AWS_REGION | jq -r '.Parameter.Value' >> $TARGET_DIR/.env

packages:
  yum: 
    jq: []