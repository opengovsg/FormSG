# This docker-compose file is only for local development purposes.
version: '3'
services:
  formsg:
    build:
      context: .
      dockerfile: Dockerfile.development
    depends_on:
      - database
    volumes:
      - ./:/opt/formsg
      - /opt/formsg/node_modules
    ports:
      - '5001:5000'
      - '4566:4566' # localstack ports
      - '5156:5156' # mockpass ports
      - '9229:9229' # Node debugger port
    environment:
      - NODE_ENV=development
      - DB_HOST=mongodb://database:27017/formsg
      - APP_NAME=FormSG
      - APP_URL=http://localhost:5000
      - ATTACHMENT_S3_BUCKET=local-attachment-bucket
      - IMAGE_S3_BUCKET=local-image-bucket
      - LOGO_S3_BUCKET=local-logo-bucket
      - FORMSG_SDK_MODE=development
      - BOUNCE_LIFE_SPAN=86400000
      - AWS_ACCESS_KEY_ID=fakeKey
      - AWS_SECRET_ACCESS_KEY=fakeSecret
      - SESSION_SECRET=thisisasecret
      - AWS_ENDPOINT=http://localhost:4566
      - SECRET_ENV=development
      - SUBMISSIONS_RATE_LIMIT=200
      - SEND_AUTH_OTP_RATE_LIMIT=60
      - SES_PORT=1025
      - SES_HOST=maildev
      - WEBHOOK_SQS_URL=http://localhost:4566/000000000000/local-webhooks-sqs-main
      - INTRANET_IP_LIST_PATH
      - SENTRY_CONFIG_URL=https://random@sentry.io/123456
      - CSP_REPORT_URI=https://random@sentry.io/123456
      # This needs to be removed and replaced with a real tracking ID in a local .env file
      # in order to enable GA in a local environment
      - GA_TRACKING_ID=mockGATrackingId
      # Test credentials from reCAPTCHA docs
      # https://developers.google.com/recaptcha/docs/faq#id-like-to-run-automated-tests-with-recaptcha.-what-should-i-do
      - GOOGLE_CAPTCHA=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
      - GOOGLE_CAPTCHA_PUBLIC=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
      # Keep in sync with the development key in
      # https://github.com/opengovsg/formsg-javascript-sdk/blob/develop/src/resource/verification-keys.ts
      - VERIFICATION_SECRET_KEY=iGkfOuI6uxrlfw+7CZFFUZBwk86I+pu6v+g7EWA6qJpJnilXQleCPx2EVTr24eWWphzFO2WJiaL53oyXnqWdBQ==
      # Keep in sync with the development key in
      # https://github.com/opengovsg/formsg-javascript-sdk/blob/develop/src/resource/signing-keys.ts
      - SIGNING_SECRET_KEY=HDBXpu+2/gu10bLHpy8HjpN89xbA6boH9GwibPGJA8BOXmB+zOUpxCP33/S5p8vBWlPokC7gLR0ca8urVwfMUQ==
      # Mock Twilio credentials. SMSes do not work in dev environment.
      - TWILIO_ACCOUNT_SID=ACmockTwilioAccountSid
      - TWILIO_API_KEY=mockTwilioApiKey
      - TWILIO_API_SECRET=mockTwilioApiSecret
      - TWILIO_MESSAGING_SERVICE_SID=mockTwilioMsgSrvcSid
      # Use mockpass key pairs and endpoints
      - SP_FORMSG_KEY_PATH=./node_modules/@opengovsg/mockpass/static/certs/key.pem
      - SP_FORMSG_CERT_PATH=./node_modules/@opengovsg/mockpass/static/certs/server.crt
      - SP_IDP_CERT_PATH=./node_modules/@opengovsg/mockpass/static/certs/spcp.crt
      - SINGPASS_IDP_LOGIN_URL=http://localhost:5156/singpass/logininitial
      - SINGPASS_IDP_ENDPOINT=http://localhost:5156/singpass/soap
      - SINGPASS_ESRVC_ID=spEsrvcId
      - SINGPASS_PARTNER_ENTITY_ID=https://localhost:5000/singpass
      - SINGPASS_IDP_ID=https://saml-internet.singpass.gov.sg/FIM/sps/SingpassIDPFed/saml20
      - SP_OIDC_NDI_DISCOVERY_ENDPOINT=https://stg-id.singpass.gov.sg/.well-known/openid-configuration
      - SP_OIDC_NDI_JWKS_ENDPOINT=https://stg-id.singpass.gov.sg/.well-known/keys
      - SP_OIDC_RP_CLIENT_ID=rpClientId
      - SP_OIDC_RP_REDIRECT_URL=https://staging.form.gov.sg/api/v3/singpass/login
      - SP_OIDC_RP_JWKS_PUBLIC_PATH=./tests/certs/test_rp_public_jwks.json
      - SP_OIDC_RP_JWKS_SECRET_PATH=./tests/certs/test_rp_secret_jwks.json
      - CP_OIDC_RP_JWKS_PUBLIC_PATH=./tests/certs/test_rp_public_jwks.json
      - CP_FORMSG_KEY_PATH=./node_modules/@opengovsg/mockpass/static/certs/key.pem
      - CP_FORMSG_CERT_PATH=./node_modules/@opengovsg/mockpass/static/certs/server.crt
      - CP_IDP_CERT_PATH=./node_modules/@opengovsg/mockpass/static/certs/spcp.crt
      - CORPPASS_IDP_LOGIN_URL=http://localhost:5156/corppass/logininitial
      - CORPPASS_IDP_ENDPOINT=http://localhost:5156/corppass/soap
      - CORPPASS_PARTNER_ENTITY_ID=https://localhost:5000/corppass
      - CORPPASS_ESRVC_ID=cpEsrvcId
      - CORPPASS_IDP_ID=https://saml.corppass.gov.sg/FIM/sps/CorpIDPFed/saml20
      - IS_SP_MAINTENANCE
      - IS_CP_MAINTENANCE
      - MYINFO_BANNER_CONTENT
      - MYINFO_CLIENT_CONFIG=dev
      - MYINFO_FORMSG_KEY_PATH=./node_modules/@opengovsg/mockpass/static/certs/key.pem
      - MYINFO_CERT_PATH=./node_modules/@opengovsg/mockpass/static/certs/spcp.crt
      - MYINFO_CLIENT_ID=mockClientId
      - MYINFO_CLIENT_SECRET=mockClientSecret
      - SGID_ENDPOINT=http://localhost:5156/sgid/v1/oauth
      - SGID_CLIENT_ID=sgidclientid
      - SGID_CLIENT_SECRET=sgidclientsecret
      - SGID_REDIRECT_URI=http://localhost:5000/sgid/login
      - SGID_PRIVATE_KEY=./node_modules/@opengovsg/mockpass/static/certs/key.pem
      - SGID_PUBLIC_KEY=./node_modules/@opengovsg/mockpass/static/certs/server.crt
      - SES_PASS
      - SES_USER
      - OTP_LIFE_SPAN
      - AWS_REGION

  mockpass:
    build: https://github.com/opengovsg/mockpass.git
    depends_on:
      - formsg
    environment:
      - CORPPASS_ASSERT_ENDPOINT=http://localhost:5000/corppass/login
      - SINGPASS_ASSERT_ENDPOINT=http://localhost:5000/singpass/login
      - MOCKPASS_NRIC=S6005038D
      - MOCKPASS_UEN=123456789A
      - SHOW_LOGIN_PAGE=true
      - SINGPASS_IDP_ID=https://saml-internet.singpass.gov.sg/FIM/sps/SingpassIDPFed/saml20
      - CORPPASS_IDP_ID=https://saml.corppass.gov.sg/FIM/sps/CorpIDPFed/saml20
    network_mode: 'service:formsg' # reuse formsg service's network stack so that it can resolve localhost:5156 to mockpass:5156

  database:
    image: 'mongo:4.2'
    container_name: 'formsg-db'
    environment:
      - MONGO_INITDB_DATABASE=formsg
    volumes:
      - mongodata:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - '27017:27017'
    logging:
      driver: none

  localstack:
    image: localstack/localstack:0.11.5
    container_name: formsg-localstack
    depends_on:
      - formsg
    environment:
      - SERVICES=s3,sqs,secretsmanager
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - './.localstack:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
    network_mode: 'service:formsg' # reuse formsg service's network stack so that it can resolve localhost:4566 to localstack:4566
    logging:
      driver: none

  maildev:
    image: maildev/maildev
    ports:
      - '1080:1080'

volumes:
  mongodata:
