service: virus-scanner
frameworkVersion: '3'
useDotenv: true
custom:
  currentStage: ${opt:stage}
  serverlessIfElse:
    - If: '"${opt:stage}" == "production"'
      Set:
        - provider.provisionedConcurrency: 5
      ElseSet:
        - provider.provisionedConcurrency: 1
provider:
  name: aws
  region: ap-southeast-1
  stage: ${opt:stage}
  provisionedConcurrency: 0
  iam:
    role:
      statements:
        # Allow functions to read/write objects in a bucket
        - Effect: Allow
          Action:
            - 's3:GetObject'
            - 's3:PutObject'
          Resource:
            - 'arn:aws:s3:::${env:VIRUS_SCANNER_QUARANTINE_S3_BUCKET}/*'
            - 'arn:aws:s3:::${env:VIRUS_SCANNER_CLEAN_S3_BUCKET}/*'
  ecr:
    images:
      virus-scanner:
        path: ./
        platform: linux/amd64

functions:
  virus-scanner:
    image:
      name: virus-scanner
    # max timeout per invocation
    timeout: 300
    # allocate more memory as the default 1028 MB size will cause lambda to crash
    memorySize: 2048
    # Provision concurrency so at least one instance always hot
    # https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/#provisioned-concurrency
    # 1 for staging, 5 for prod
    provisionedConcurrency: ${self:provider.provisionedConcurrency}


plugins:
  # required so that env variables are loaded in functions
  - serverless-dotenv-plugin
  - serverless-plugin-ifelse
